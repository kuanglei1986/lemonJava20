1、多态 Polymorphism 少写代码
	概念：用父类的类型来接收子类的对象
	先决条件：
		继承/接口实现
		父类类型接收子类对象
	优点：
		扩展性强，解决了代码复用，降低类型耦合度
		可以少定义变量，少些重复代码。
		案例：一个方法接受不同的子类类型。
	缺点：
		不能使用子类特有方法
		可以使用强转，转成对应子类类型，解决这个问题。
	使用方法:
		父类 变量名1 = 子类对象;
		子类 变量名2 = (子类)变量名1;
		多态一般伴随重写使用。
	
	场景：
		public void driverCar(Car car) {
			car.run();
		}
	
2、api使用
	打开->显示->索引->输入java提供的类
3、字符串
	原理:
		char[] ch = {'a','b','c'};
	特点：
		方法不能改变String本身
	方法
		equals：判断字符串是是否一样，大小写敏感
		split：切割
		replace：替换
		substring：字符串截取
		==========================
		trim：删除字符串两端的空格
		length：获取字符串长度
		equalsIgnoreCase：判断是否一样，忽略大小写
		indexOf：获取指定内容在字符串中出现的位置
		isEmpty：判断字符串是否为空
		lastIndexOf：获取要匹配内容在字符串中最后出现的位置
	构造方法：
		基本不用。
4、== 和 equals 区别
	== 比较基本数据类型比较的是值，比较引用数据类型比较的是地址值。
	equals 是Object类中的方法，基本数据类型无法调用。
			equals默认使用==号，重写之后一般比较的是内容。
			
下节课内容：
	1、接口和抽象类
	2、集合类ArrayList、HashSet、HashMap学习
	
	
	
	
	
	
	