变量：
	相同的作用域下不能有同名的变量。
基本数据类型：
	存的就是具体的值。
	int x = 3;
引用数据类型：
	存的是一个地址值。（简单理解通过门牌号能找到楼盘。这里很抽象，后面介绍java内存会再次讲解。）
字符串：
	String s = "ABC";
	
数组：
	数组就是一个容器（存储多个东西的器皿，抽屉）。
	容器的特点：
		定长、固定数据类型。
	索引：
		下标，从0开始
		
	初始化就是赋值，赋值就是初始化。
	
	一维数组的格式1：
		数据类型[] 数组名 = new 数据类型[数组的长度];
		int[] arr = new int[3];
	一维数组的格式2：
		数据类型[] 数组名 = {值1,值2,值3,值4};
		int[] arr3 = {1,2,3,4,3,4,5,6,8,9,2,3};
	获取长度
		数组名.length;
		arr.length;
	取值/赋值******：
		arr[0] = 10;
		System.out.println(arr[0]);
	二位数组的初始化格式1：
		数据类型[][] 数组名 = new 数据类型[二位数组的长度][];
		int[][] arr = new int[3][3];
	二位数组的初始化格式2（优先掌握这一种，这种会更容易理解）********：
		数据类型[][] 数组名 = {{值1，值2，}，{值1，值2}，{值1，值2}};
		int[][] arr2 = {{1,2},{3,4},{5,6},{1}};
	取值/赋值：
		arr[0][0] = 20;
		System.out.println(arr[0][0]);
	异常：运行出现了错误
		NullPointerException 
		null 值调用属性或者方法
		ArrayIndexOutOfBoundsException
		访问了不存在的索引
		
运算符
	算数运算符
		% 取余 取模
		++ -- 自增1 自减1
		单独使用时，++ 放前和放后没有区别，都是+1；
		参与运算,++在后面先把变量x的值取出来赋值（运算），再自增1
		参与运算,++在前面先把变量x自增1，再把值取出来赋值（运算）
		
	关系运算符，结果boolean
		== 比较相等
		!= 比较不相等
	逻辑运算符，结果也是boolean
		& | ! && || 
		& 遇false 则false
		| 遇true则true
		&& 短路：如果左边已经决定了整个表达式的结果，那么右边不会执行
	赋值运算符
		int a = 10;  //把10赋值给a变量；
		扩展赋值运算符 += *= /= %=; 底层包含强制类型转换
		//把左边和右边的值进行运算后赋值给左边。
		a +=10; //a = (int)(a+10);
	三元运算符
		boolean结果的表达式   ?  结果1 : 结果2;
		true 返回 结果1 ， false 返回结果2;
		
下节课内容：
	1、循环for、while、dowhile
	2、流程控制语句if、switch				
		