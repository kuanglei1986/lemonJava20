1、方法\函数重载
	规则：方法名一样，参数不一样，与返回值无关 
		参数的个数不一样 
		参数的类型不一样 
		如果参数个数一样,类型也一样，但是顺序不一样
	普通方法和构造方法都能重载
2、java内存（了解）
	java的内存包含了栈、堆、方法区、寄存器
	栈：
		先进后出
		局部变量、方法都在栈中
	堆：
		new出来的对象就在堆
	两个对象指向同一个引用（理解+掌握）。
		Student s = new Student();
		Student s2 = s;

3、封装（把代码放入方法）    三大特征都是为了少些代码少修改代码。
	Encapsulation。意思是将代码通过函数的形式将一些代码细节包装起来，防止外部代码的随机访问，
	要访问这些数据就必须通过调用函数来完成。
	好处：
		提高了代码的阅读性
		提高了代码的可维护性
	体现：方法、对象、private get/set
	
	get/set和构造方法都可以对成员变量进行赋值。
		
4、继承 inherit
	生活中的继承：子承父业。
	java中的继承：两个类之间通过extends关键字来描述父子关系，子类便可拥有父类的非私有成员。
	解决问题
		提高了代码复用性
		代码的维护性更高
	语法：
		public class 父类 {
		
		}
		 
		public class 子类 extends 父类 {
		
		}
	注意事项：
		如果一个类不继承任何类，默认继承Object,Object是java中的祖宗类。
		Java是单继承（一个类只能继承于一个类），多层继承，一个父类可以有多个子类。
		创建本类对象之前会先初始化父类对象
		子类不能继承父类的private成员（属性，方法）
		
5、方法重写/覆盖
	前提条件：继承或者实现
	子父类中出现了一模一样的方法。修饰符、返回值、方法名、参数都必须一模一样。
	作用：方法升级。
	
6、super关键字与this关键字
	super指向父类（调用父类方法或属性时候用到）
	this指向当前类（区分局部变量和成员变量同名）
	super() 调用父类构造方法
	this() 调用本类其他构造
	
7、修饰符
	访问修饰符
		public protected 默认修饰符 private
		权限逐步降低。
		public的访问权限最大。private类型的访问权限最小 
	非访问修饰符
		static 静态（共享） 后面会通过实际例子讲解
		final 常量、最终类（不能被继承，被绝育了）方法（不能被重写）
		abstract 抽象
下节课内容：
	1、多态
	2、api使用
	3、字符串方法学习
	
	
	
	
	
	
	
	
	
	
	
	